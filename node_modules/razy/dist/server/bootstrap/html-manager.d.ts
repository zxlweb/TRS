export declare enum TAG_TYPE {
    SCRIPT = 0,
    STYLE = 1,
    META = 2,
}
export interface InsertValueScriptObj {
    src: string;
    content: string;
}
export interface InsertValueStyleObj {
    href: string;
}
export interface InsertValueMetaObj {
    [key: string]: string;
}
export declare type InsertValueObj = InsertValueScriptObj | InsertValueStyleObj | InsertValueMetaObj;
export default class HTMLManager {
    private head;
    private foot;
    private CDNFailSafe;
    TAG_TYPE: typeof TAG_TYPE;
    constructor();
    addCDNFailSafe(globalVar: string, path: string): void;
    getHead(): string;
    getFoot(): string;
    removeTag(key: string): void;
    setTag(key: string, value: string): void;
    getTag(key: string): string;
    injectGlobalVar(obj: any): void;
    appendTagAfter(key: string, tagKey: string, valueObj: InsertValueObj, tagType: TAG_TYPE): void;
    prependTagBefore(key: string, tagKey: string, valueObj: InsertValueObj, tagType: TAG_TYPE): void;
    private convertObjToArray;
    private generateTag(valueObj, tagType);
    private keyCheck(key, tagKey);
    private findIndex(key);
    private getCDNFailSafeSentence();
}
