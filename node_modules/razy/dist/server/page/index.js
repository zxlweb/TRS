/**
 * @fileOverview render React components
 * @author Max
 */
"use strict";
var __assign = (this && this.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t;
    return { next: verb(0), "throw": verb(1), "return": verb(2) };
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = y[op[0] & 2 ? "return" : op[0] ? "throw" : "next"]) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [0, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
var express = require("express");
var React = require("react");
var ReactDOMServer = require("react-dom/server");
var config_1 = require("../config");
var cloneDeep = require("lodash.clonedeep");
var Immutable = require("immutable");
var html_manager_1 = require("../bootstrap/html-manager");
var react_redux_1 = require("react-redux");
var react_router_1 = require("react-router");
var device_detect_1 = require("../utils/device-detect");
var utils_1 = require("./utils");
var const_1 = require("../../const");
var validator_1 = require("../../utils/validator");
var router = express.Router();
var TIMEOUT = 15 * 1000;
var APP, routes, createStore;
function init(_reducerRoot, _routes, _createStore) {
    APP = _reducerRoot;
    routes = _routes;
    createStore = _createStore;
}
exports.init = init;
var configJS = utils_1.exportConfigToGlobalConst(config_1.vanillaConfigObj);
router.all('*', function (req, res, next) {
    console.log("new request " + req.path);
    react_router_1.match({
        routes: routes,
        location: req.url
    }, function (error, redirectLocation, renderProps) {
        var timeoutFlag = true;
        var timeoutIndex = setTimeout(function () {
            if (timeoutFlag) {
                next(new Error('request timeout'));
            }
        }, TIMEOUT);
        if (redirectLocation) {
            res.redirect(301, redirectLocation.pathname + redirectLocation.search);
        }
        else if (error) {
            next(error);
        }
        else if (renderProps === undefined) {
            res.status(404).send('Not found');
        }
        else {
            execInterceptors(renderProps, req, res, next)
                .then(function () {
                var htmlManager = new html_manager_1.default();
                setUpPage(renderProps, htmlManager);
                var store = generateStore(req.cookies[const_1.INITIAL_DATA_NAMESPACE]);
                var asyncTasks = [];
                asyncTasks.concat(loadInitialDataActions(renderProps, store));
                render(req, res, next, htmlManager, store, asyncTasks, renderProps)
                    .then(function (html) {
                    res.setHeader('Content-Type', 'text/html');
                    res.send(html);
                    res.end();
                }).catch(function (err) {
                    next(err);
                });
            })
                .catch(function (err) {
                if (err.message === 'redirected') {
                    res.end();
                }
                else
                    next(err);
            }).finally(function () {
                timeoutFlag = false;
                clearTimeout(timeoutIndex);
            });
        }
    });
});
function execInterceptors(renderProps, req, res, next) {
    return __awaiter(this, void 0, void 0, function () {
        var interceptors, _i, _a, item, component;
        return __generator(this, function (_b) {
            switch (_b.label) {
                case 0:
                    interceptors = [];
                    _i = 0, _a = renderProps.components;
                    _b.label = 1;
                case 1:
                    if (!(_i < _a.length)) return [3 /*break*/, 4];
                    item = _a[_i];
                    if (!(item && item.WrappedComponent)) return [3 /*break*/, 3];
                    component = new item.WrappedComponent();
                    return [4 /*yield*/, component.interceptor(req, res, next)];
                case 2:
                    _b.sent();
                    _b.label = 3;
                case 3:
                    _i++;
                    return [3 /*break*/, 1];
                case 4: return [2 /*return*/];
            }
        });
    });
}
function generateStore(initialDataFromClient) {
    var initialStateImmutable = {};
    if (initialDataFromClient) {
        var initialData = JSON.parse(initialDataFromClient);
        for (var i in initialData) {
            var item = initialData[i];
            initialStateImmutable[i] = Immutable.fromJS(item);
        }
    }
    return createStore(APP, initialStateImmutable);
}
function setUpPage(renderProps, htmlManager) {
    renderProps.components.forEach(function (item) {
        if (item && item.WrappedComponent) {
            var component = new item.WrappedComponent();
            // setUpPage
            component.setUpPage(htmlManager);
        }
    });
}
function loadInitialDataActions(renderProps, store) {
    var initialDataActions = [];
    renderProps.components.forEach(function (item) {
        if (item && item.WrappedComponent) {
            var component = new item.WrappedComponent();
            // getInitDataAction
            var actions = component.getInitDataAction(renderProps, true);
            validator_1.notEmptyValidator(actions) && initialDataActions.concat(actions);
        }
    });
    return initialDataActions.map(function (item) { return store.dispatch(item); });
}
function generateClientGlobalVar(deviceVars, storeState) {
    var thisGlobalVars = cloneDeep(configJS);
    Object.assign(thisGlobalVars, deviceVars);
    thisGlobalVars.__INITIAL_STATE__ = encodeURIComponent(JSON.stringify(storeState));
    return thisGlobalVars;
}
function getCreateElement(deviceVars) {
    return function (Component, props) {
        var newProps = props;
        Object.assign(newProps, deviceVars);
        return React.createElement(Component, newProps);
    };
}
function render(req, res, next, htmlManager, store, asyncTasks, renderProps) {
    return __awaiter(this, void 0, void 0, function () {
        var deviceVars, html;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0: return [4 /*yield*/, Promise.all(asyncTasks)];
                case 1:
                    _a.sent();
                    deviceVars = device_detect_1.getDeviceVars(req.headers['user-agent']);
                    htmlManager.injectGlobalVar(generateClientGlobalVar(deviceVars, store.getState()));
                    html = ReactDOMServer.renderToString(React.createElement(react_redux_1.Provider, { store: store },
                        React.createElement(react_router_1.RouterContext, __assign({}, renderProps, { createElement: getCreateElement(deviceVars) }))));
                    html = htmlManager.getHead() + (html || '') + htmlManager.getFoot();
                    return [2 /*return*/, html];
            }
        });
    });
}
exports.default = router;
